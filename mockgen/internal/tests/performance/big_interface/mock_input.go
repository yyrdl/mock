// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/tests/performance/big_interface/big_interface.go

// Package big_interface is a generated GoMock package.
package big_interface

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBigInterface is a mock of BigInterface interface.
type MockBigInterface struct {
	FnFoo1   func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo2   func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo3   func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo4   func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo5   func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo6   func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo7   func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo8   func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo9   func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo10  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo11  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo12  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo13  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo14  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo15  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo16  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo17  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo18  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo19  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo20  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo21  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo22  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo23  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo24  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo25  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo26  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo27  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo28  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo29  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo30  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo31  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo32  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo33  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo34  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo35  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo36  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo37  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo38  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo39  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo40  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo41  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo42  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo43  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo44  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo45  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo46  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo47  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo48  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo49  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo50  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo51  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo52  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo53  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo54  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo55  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo56  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo57  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo58  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo59  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	FnFoo60  func(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar
	ctrl     *gomock.Controller
	recorder *MockBigInterfaceMockRecorder
}

// MockBigInterfaceMockRecorder is the mock recorder for MockBigInterface.
type MockBigInterfaceMockRecorder struct {
	mock *MockBigInterface
}

// NewMockBigInterface creates a new mock instance.
func NewMockBigInterface(ctrl *gomock.Controller) *MockBigInterface {
	mock := &MockBigInterface{ctrl: ctrl}
	mock.recorder = &MockBigInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBigInterface) EXPECT() *MockBigInterfaceMockRecorder {
	return m.recorder
}

// Foo1 mocks base method.
func (m *MockBigInterface) Foo1(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo1 != nil {
		return m.FnFoo1(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo1", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo1 indicates an expected call of Foo1.
func (mr *MockBigInterfaceMockRecorder) Foo1(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo1", reflect.TypeOf((*MockBigInterface)(nil).Foo1), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo2 mocks base method.
func (m *MockBigInterface) Foo2(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo2 != nil {
		return m.FnFoo2(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo2", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo2 indicates an expected call of Foo2.
func (mr *MockBigInterfaceMockRecorder) Foo2(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo2", reflect.TypeOf((*MockBigInterface)(nil).Foo2), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo3 mocks base method.
func (m *MockBigInterface) Foo3(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo3 != nil {
		return m.FnFoo3(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo3", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo3 indicates an expected call of Foo3.
func (mr *MockBigInterfaceMockRecorder) Foo3(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo3", reflect.TypeOf((*MockBigInterface)(nil).Foo3), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo4 mocks base method.
func (m *MockBigInterface) Foo4(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo4 != nil {
		return m.FnFoo4(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo4", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo4 indicates an expected call of Foo4.
func (mr *MockBigInterfaceMockRecorder) Foo4(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo4", reflect.TypeOf((*MockBigInterface)(nil).Foo4), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo5 mocks base method.
func (m *MockBigInterface) Foo5(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo5 != nil {
		return m.FnFoo5(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo5", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo5 indicates an expected call of Foo5.
func (mr *MockBigInterfaceMockRecorder) Foo5(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo5", reflect.TypeOf((*MockBigInterface)(nil).Foo5), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo6 mocks base method.
func (m *MockBigInterface) Foo6(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo6 != nil {
		return m.FnFoo6(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo6", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo6 indicates an expected call of Foo6.
func (mr *MockBigInterfaceMockRecorder) Foo6(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo6", reflect.TypeOf((*MockBigInterface)(nil).Foo6), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo7 mocks base method.
func (m *MockBigInterface) Foo7(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo7 != nil {
		return m.FnFoo7(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo7", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo7 indicates an expected call of Foo7.
func (mr *MockBigInterfaceMockRecorder) Foo7(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo7", reflect.TypeOf((*MockBigInterface)(nil).Foo7), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo8 mocks base method.
func (m *MockBigInterface) Foo8(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo8 != nil {
		return m.FnFoo8(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo8", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo8 indicates an expected call of Foo8.
func (mr *MockBigInterfaceMockRecorder) Foo8(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo8", reflect.TypeOf((*MockBigInterface)(nil).Foo8), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo9 mocks base method.
func (m *MockBigInterface) Foo9(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo9 != nil {
		return m.FnFoo9(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo9", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo9 indicates an expected call of Foo9.
func (mr *MockBigInterfaceMockRecorder) Foo9(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo9", reflect.TypeOf((*MockBigInterface)(nil).Foo9), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo10 mocks base method.
func (m *MockBigInterface) Foo10(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo10 != nil {
		return m.FnFoo10(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo10", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo10 indicates an expected call of Foo10.
func (mr *MockBigInterfaceMockRecorder) Foo10(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo10", reflect.TypeOf((*MockBigInterface)(nil).Foo10), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo11 mocks base method.
func (m *MockBigInterface) Foo11(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo11 != nil {
		return m.FnFoo11(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo11", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo11 indicates an expected call of Foo11.
func (mr *MockBigInterfaceMockRecorder) Foo11(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo11", reflect.TypeOf((*MockBigInterface)(nil).Foo11), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo12 mocks base method.
func (m *MockBigInterface) Foo12(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo12 != nil {
		return m.FnFoo12(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo12", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo12 indicates an expected call of Foo12.
func (mr *MockBigInterfaceMockRecorder) Foo12(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo12", reflect.TypeOf((*MockBigInterface)(nil).Foo12), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo13 mocks base method.
func (m *MockBigInterface) Foo13(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo13 != nil {
		return m.FnFoo13(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo13", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo13 indicates an expected call of Foo13.
func (mr *MockBigInterfaceMockRecorder) Foo13(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo13", reflect.TypeOf((*MockBigInterface)(nil).Foo13), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo14 mocks base method.
func (m *MockBigInterface) Foo14(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo14 != nil {
		return m.FnFoo14(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo14", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo14 indicates an expected call of Foo14.
func (mr *MockBigInterfaceMockRecorder) Foo14(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo14", reflect.TypeOf((*MockBigInterface)(nil).Foo14), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo15 mocks base method.
func (m *MockBigInterface) Foo15(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo15 != nil {
		return m.FnFoo15(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo15", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo15 indicates an expected call of Foo15.
func (mr *MockBigInterfaceMockRecorder) Foo15(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo15", reflect.TypeOf((*MockBigInterface)(nil).Foo15), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo16 mocks base method.
func (m *MockBigInterface) Foo16(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo16 != nil {
		return m.FnFoo16(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo16", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo16 indicates an expected call of Foo16.
func (mr *MockBigInterfaceMockRecorder) Foo16(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo16", reflect.TypeOf((*MockBigInterface)(nil).Foo16), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo17 mocks base method.
func (m *MockBigInterface) Foo17(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo17 != nil {
		return m.FnFoo17(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo17", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo17 indicates an expected call of Foo17.
func (mr *MockBigInterfaceMockRecorder) Foo17(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo17", reflect.TypeOf((*MockBigInterface)(nil).Foo17), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo18 mocks base method.
func (m *MockBigInterface) Foo18(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo18 != nil {
		return m.FnFoo18(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo18", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo18 indicates an expected call of Foo18.
func (mr *MockBigInterfaceMockRecorder) Foo18(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo18", reflect.TypeOf((*MockBigInterface)(nil).Foo18), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo19 mocks base method.
func (m *MockBigInterface) Foo19(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo19 != nil {
		return m.FnFoo19(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo19", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo19 indicates an expected call of Foo19.
func (mr *MockBigInterfaceMockRecorder) Foo19(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo19", reflect.TypeOf((*MockBigInterface)(nil).Foo19), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo20 mocks base method.
func (m *MockBigInterface) Foo20(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo20 != nil {
		return m.FnFoo20(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo20", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo20 indicates an expected call of Foo20.
func (mr *MockBigInterfaceMockRecorder) Foo20(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo20", reflect.TypeOf((*MockBigInterface)(nil).Foo20), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo21 mocks base method.
func (m *MockBigInterface) Foo21(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo21 != nil {
		return m.FnFoo21(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo21", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo21 indicates an expected call of Foo21.
func (mr *MockBigInterfaceMockRecorder) Foo21(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo21", reflect.TypeOf((*MockBigInterface)(nil).Foo21), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo22 mocks base method.
func (m *MockBigInterface) Foo22(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo22 != nil {
		return m.FnFoo22(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo22", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo22 indicates an expected call of Foo22.
func (mr *MockBigInterfaceMockRecorder) Foo22(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo22", reflect.TypeOf((*MockBigInterface)(nil).Foo22), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo23 mocks base method.
func (m *MockBigInterface) Foo23(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo23 != nil {
		return m.FnFoo23(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo23", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo23 indicates an expected call of Foo23.
func (mr *MockBigInterfaceMockRecorder) Foo23(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo23", reflect.TypeOf((*MockBigInterface)(nil).Foo23), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo24 mocks base method.
func (m *MockBigInterface) Foo24(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo24 != nil {
		return m.FnFoo24(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo24", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo24 indicates an expected call of Foo24.
func (mr *MockBigInterfaceMockRecorder) Foo24(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo24", reflect.TypeOf((*MockBigInterface)(nil).Foo24), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo25 mocks base method.
func (m *MockBigInterface) Foo25(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo25 != nil {
		return m.FnFoo25(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo25", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo25 indicates an expected call of Foo25.
func (mr *MockBigInterfaceMockRecorder) Foo25(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo25", reflect.TypeOf((*MockBigInterface)(nil).Foo25), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo26 mocks base method.
func (m *MockBigInterface) Foo26(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo26 != nil {
		return m.FnFoo26(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo26", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo26 indicates an expected call of Foo26.
func (mr *MockBigInterfaceMockRecorder) Foo26(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo26", reflect.TypeOf((*MockBigInterface)(nil).Foo26), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo27 mocks base method.
func (m *MockBigInterface) Foo27(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo27 != nil {
		return m.FnFoo27(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo27", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo27 indicates an expected call of Foo27.
func (mr *MockBigInterfaceMockRecorder) Foo27(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo27", reflect.TypeOf((*MockBigInterface)(nil).Foo27), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo28 mocks base method.
func (m *MockBigInterface) Foo28(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo28 != nil {
		return m.FnFoo28(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo28", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo28 indicates an expected call of Foo28.
func (mr *MockBigInterfaceMockRecorder) Foo28(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo28", reflect.TypeOf((*MockBigInterface)(nil).Foo28), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo29 mocks base method.
func (m *MockBigInterface) Foo29(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo29 != nil {
		return m.FnFoo29(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo29", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo29 indicates an expected call of Foo29.
func (mr *MockBigInterfaceMockRecorder) Foo29(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo29", reflect.TypeOf((*MockBigInterface)(nil).Foo29), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo30 mocks base method.
func (m *MockBigInterface) Foo30(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo30 != nil {
		return m.FnFoo30(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo30", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo30 indicates an expected call of Foo30.
func (mr *MockBigInterfaceMockRecorder) Foo30(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo30", reflect.TypeOf((*MockBigInterface)(nil).Foo30), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo31 mocks base method.
func (m *MockBigInterface) Foo31(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo31 != nil {
		return m.FnFoo31(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo31", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo31 indicates an expected call of Foo31.
func (mr *MockBigInterfaceMockRecorder) Foo31(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo31", reflect.TypeOf((*MockBigInterface)(nil).Foo31), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo32 mocks base method.
func (m *MockBigInterface) Foo32(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo32 != nil {
		return m.FnFoo32(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo32", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo32 indicates an expected call of Foo32.
func (mr *MockBigInterfaceMockRecorder) Foo32(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo32", reflect.TypeOf((*MockBigInterface)(nil).Foo32), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo33 mocks base method.
func (m *MockBigInterface) Foo33(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo33 != nil {
		return m.FnFoo33(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo33", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo33 indicates an expected call of Foo33.
func (mr *MockBigInterfaceMockRecorder) Foo33(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo33", reflect.TypeOf((*MockBigInterface)(nil).Foo33), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo34 mocks base method.
func (m *MockBigInterface) Foo34(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo34 != nil {
		return m.FnFoo34(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo34", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo34 indicates an expected call of Foo34.
func (mr *MockBigInterfaceMockRecorder) Foo34(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo34", reflect.TypeOf((*MockBigInterface)(nil).Foo34), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo35 mocks base method.
func (m *MockBigInterface) Foo35(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo35 != nil {
		return m.FnFoo35(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo35", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo35 indicates an expected call of Foo35.
func (mr *MockBigInterfaceMockRecorder) Foo35(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo35", reflect.TypeOf((*MockBigInterface)(nil).Foo35), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo36 mocks base method.
func (m *MockBigInterface) Foo36(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo36 != nil {
		return m.FnFoo36(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo36", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo36 indicates an expected call of Foo36.
func (mr *MockBigInterfaceMockRecorder) Foo36(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo36", reflect.TypeOf((*MockBigInterface)(nil).Foo36), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo37 mocks base method.
func (m *MockBigInterface) Foo37(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo37 != nil {
		return m.FnFoo37(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo37", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo37 indicates an expected call of Foo37.
func (mr *MockBigInterfaceMockRecorder) Foo37(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo37", reflect.TypeOf((*MockBigInterface)(nil).Foo37), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo38 mocks base method.
func (m *MockBigInterface) Foo38(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo38 != nil {
		return m.FnFoo38(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo38", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo38 indicates an expected call of Foo38.
func (mr *MockBigInterfaceMockRecorder) Foo38(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo38", reflect.TypeOf((*MockBigInterface)(nil).Foo38), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo39 mocks base method.
func (m *MockBigInterface) Foo39(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo39 != nil {
		return m.FnFoo39(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo39", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo39 indicates an expected call of Foo39.
func (mr *MockBigInterfaceMockRecorder) Foo39(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo39", reflect.TypeOf((*MockBigInterface)(nil).Foo39), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo40 mocks base method.
func (m *MockBigInterface) Foo40(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo40 != nil {
		return m.FnFoo40(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo40", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo40 indicates an expected call of Foo40.
func (mr *MockBigInterfaceMockRecorder) Foo40(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo40", reflect.TypeOf((*MockBigInterface)(nil).Foo40), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo41 mocks base method.
func (m *MockBigInterface) Foo41(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo41 != nil {
		return m.FnFoo41(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo41", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo41 indicates an expected call of Foo41.
func (mr *MockBigInterfaceMockRecorder) Foo41(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo41", reflect.TypeOf((*MockBigInterface)(nil).Foo41), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo42 mocks base method.
func (m *MockBigInterface) Foo42(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo42 != nil {
		return m.FnFoo42(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo42", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo42 indicates an expected call of Foo42.
func (mr *MockBigInterfaceMockRecorder) Foo42(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo42", reflect.TypeOf((*MockBigInterface)(nil).Foo42), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo43 mocks base method.
func (m *MockBigInterface) Foo43(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo43 != nil {
		return m.FnFoo43(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo43", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo43 indicates an expected call of Foo43.
func (mr *MockBigInterfaceMockRecorder) Foo43(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo43", reflect.TypeOf((*MockBigInterface)(nil).Foo43), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo44 mocks base method.
func (m *MockBigInterface) Foo44(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo44 != nil {
		return m.FnFoo44(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo44", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo44 indicates an expected call of Foo44.
func (mr *MockBigInterfaceMockRecorder) Foo44(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo44", reflect.TypeOf((*MockBigInterface)(nil).Foo44), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo45 mocks base method.
func (m *MockBigInterface) Foo45(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo45 != nil {
		return m.FnFoo45(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo45", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo45 indicates an expected call of Foo45.
func (mr *MockBigInterfaceMockRecorder) Foo45(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo45", reflect.TypeOf((*MockBigInterface)(nil).Foo45), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo46 mocks base method.
func (m *MockBigInterface) Foo46(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo46 != nil {
		return m.FnFoo46(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo46", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo46 indicates an expected call of Foo46.
func (mr *MockBigInterfaceMockRecorder) Foo46(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo46", reflect.TypeOf((*MockBigInterface)(nil).Foo46), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo47 mocks base method.
func (m *MockBigInterface) Foo47(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo47 != nil {
		return m.FnFoo47(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo47", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo47 indicates an expected call of Foo47.
func (mr *MockBigInterfaceMockRecorder) Foo47(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo47", reflect.TypeOf((*MockBigInterface)(nil).Foo47), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo48 mocks base method.
func (m *MockBigInterface) Foo48(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo48 != nil {
		return m.FnFoo48(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo48", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo48 indicates an expected call of Foo48.
func (mr *MockBigInterfaceMockRecorder) Foo48(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo48", reflect.TypeOf((*MockBigInterface)(nil).Foo48), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo49 mocks base method.
func (m *MockBigInterface) Foo49(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo49 != nil {
		return m.FnFoo49(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo49", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo49 indicates an expected call of Foo49.
func (mr *MockBigInterfaceMockRecorder) Foo49(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo49", reflect.TypeOf((*MockBigInterface)(nil).Foo49), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo50 mocks base method.
func (m *MockBigInterface) Foo50(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo50 != nil {
		return m.FnFoo50(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo50", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo50 indicates an expected call of Foo50.
func (mr *MockBigInterfaceMockRecorder) Foo50(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo50", reflect.TypeOf((*MockBigInterface)(nil).Foo50), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo51 mocks base method.
func (m *MockBigInterface) Foo51(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo51 != nil {
		return m.FnFoo51(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo51", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo51 indicates an expected call of Foo51.
func (mr *MockBigInterfaceMockRecorder) Foo51(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo51", reflect.TypeOf((*MockBigInterface)(nil).Foo51), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo52 mocks base method.
func (m *MockBigInterface) Foo52(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo52 != nil {
		return m.FnFoo52(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo52", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo52 indicates an expected call of Foo52.
func (mr *MockBigInterfaceMockRecorder) Foo52(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo52", reflect.TypeOf((*MockBigInterface)(nil).Foo52), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo53 mocks base method.
func (m *MockBigInterface) Foo53(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo53 != nil {
		return m.FnFoo53(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo53", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo53 indicates an expected call of Foo53.
func (mr *MockBigInterfaceMockRecorder) Foo53(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo53", reflect.TypeOf((*MockBigInterface)(nil).Foo53), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo54 mocks base method.
func (m *MockBigInterface) Foo54(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo54 != nil {
		return m.FnFoo54(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo54", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo54 indicates an expected call of Foo54.
func (mr *MockBigInterfaceMockRecorder) Foo54(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo54", reflect.TypeOf((*MockBigInterface)(nil).Foo54), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo55 mocks base method.
func (m *MockBigInterface) Foo55(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo55 != nil {
		return m.FnFoo55(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo55", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo55 indicates an expected call of Foo55.
func (mr *MockBigInterfaceMockRecorder) Foo55(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo55", reflect.TypeOf((*MockBigInterface)(nil).Foo55), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo56 mocks base method.
func (m *MockBigInterface) Foo56(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo56 != nil {
		return m.FnFoo56(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo56", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo56 indicates an expected call of Foo56.
func (mr *MockBigInterfaceMockRecorder) Foo56(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo56", reflect.TypeOf((*MockBigInterface)(nil).Foo56), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo57 mocks base method.
func (m *MockBigInterface) Foo57(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo57 != nil {
		return m.FnFoo57(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo57", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo57 indicates an expected call of Foo57.
func (mr *MockBigInterfaceMockRecorder) Foo57(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo57", reflect.TypeOf((*MockBigInterface)(nil).Foo57), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo58 mocks base method.
func (m *MockBigInterface) Foo58(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo58 != nil {
		return m.FnFoo58(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo58", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo58 indicates an expected call of Foo58.
func (mr *MockBigInterfaceMockRecorder) Foo58(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo58", reflect.TypeOf((*MockBigInterface)(nil).Foo58), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo59 mocks base method.
func (m *MockBigInterface) Foo59(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo59 != nil {
		return m.FnFoo59(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo59", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo59 indicates an expected call of Foo59.
func (mr *MockBigInterfaceMockRecorder) Foo59(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo59", reflect.TypeOf((*MockBigInterface)(nil).Foo59), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

// Foo60 mocks base method.
func (m *MockBigInterface) Foo60(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 bool) Bar {
	if m.FnFoo60 != nil {
		return m.FnFoo60(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo60", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
	ret0, _ := ret[0].(Bar)
	return ret0
}

// Foo60 indicates an expected call of Foo60.
func (mr *MockBigInterfaceMockRecorder) Foo60(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo60", reflect.TypeOf((*MockBigInterface)(nil).Foo60), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}
